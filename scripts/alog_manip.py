#!/usr/bin/python
"""
collection of functions for manipulating *.alogs

Author: Robert Cofield
Created 6/6/2012
Python v2.7.3, Ubuntu Precise
"""

#############################################################################################


def pullByStr2new(alogSrc, alogTgt, desStr):
    """
    finds msgs with a string in meas type or source and creates a separate *.alog file from those msgs

    INPUTS:
        alogSrc     ::  ABSOLUTE PATH STRING of source *.alog file
        alogTgt     ::  ABSOLUTE PATH STRING of desired target *.alog file
        desStr      ::  messages containing any STRING in this LIST will be copied

    """
    import csv, os

    curdir = os.getcwd()
    os.chdir('/') # go to root so that reader can use abs pathname
    src = open(alogSrc, 'rU') # read source alogs
    tgt = open(alogTgt, 'w')
    os.chdir(curdir)
    
    tgt.write('%% Generated by alog_manip.pullByStr2new\n')

    for desired in range(len(desStr)):
        desStr[desired] = ' ' + desStr[desired] + ' '
        #this keeps things like 'zLat' and 'zLatStdDev' from causing redundancies`
    
    for line in filterData(src, desStr):
        tgt.write(line + '\n')


def filterData(src, desStr):
    """
    yields msgs in list format which contain a desired string in the source (third) column

    src         ::  reader object from source *.alog file
    desStr      ::  string we're looking for
    """

    for line in src:
        line = str(line) # now each line is a string
        line = line.rstrip()
        if '%%' in line: #header
            yield line

        for desired in desStr:
            if desired in line:
                yield line


###########################################################################################

def makeNoisy(alogSrc, alogTgt, meas, mag):
    """
    Adds gaussian white noise to specific measurements in an *.alog file.

    INPUTS:
        alog        ::  ABSOLUTE PATH of *.alog file
        meas        ::  LIST of WHICH MEASUREMENT (z_______) to corrupt with gaussian noise
        scale       ::  std dev of distr

    """
    import os
    from numpy.random import normal

    # if meas[0] != 'z':
    #     error()

    curdir = os.getcwd()
    os.chdir('/')
    src = open(alogSrc, 'rU')
    tgt = open(alogTgt, 'w')
    os.chdir(curdir)

    for msg in src:
        if ("%%" in msg):
            del msg[-2:-1]
        else:
            msg = msg.split()
            for des in meas:
                if msg[1] == des:
                    noise = normal(float(msg[3]), mag, 1)
                    msg[3] = str(noise[0]) # center deviation about measurement
            msg = msg[0]+'     '+msg[1]+'     '+msg[2]+'     '+(msg[3])
        print(msg)
        tgt.write(msg + '\n')